<?php
namespace models;
use base\orm\modelo;
use config\generales;
use config\views;
use gamboamartin\errores\errores;

use PDO;

class org_sucursal extends modelo{
    public function __construct(PDO $link){
        $tabla = __CLASS__;
        $columnas = array($tabla=>false, 'org_empresa'=>$tabla, 'dp_calle_pertenece'=>$tabla,
            'dp_calle' => 'dp_calle_pertenece', 'dp_colonia_postal'=>'dp_calle_pertenece',
            'dp_colonia'=>'dp_colonia_postal', 'dp_cp'=>'dp_colonia_postal', 'dp_municipio'=>'dp_cp',
            'dp_estado'=>'dp_municipio','dp_pais'=>'dp_estado','org_tipo_sucursal'=>$tabla);
        $campos_obligatorios = array('descripcion','dp_calle_pertenece_id','exterior','org_empresa_id',
            'org_tipo_sucursal_id','telefono_1');

        $tipo_campos['telefono_1'] = 'telefono_mx';
        $tipo_campos['telefono_2'] = 'telefono_mx';
        $tipo_campos['telefono_3'] = 'telefono_mx';


        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, tipo_campos: $tipo_campos);
    }
    public function alta_bd(): array|\stdClass
    {

        $keys = array('org_empresa_id','codigo','codigo_bis','fecha_inicio_operaciones','dp_calle_pertenece_id',
            'exterior','telefono_1');
        $valida = $this->validacion->valida_existencia_keys(keys: $keys, registro: $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro', data: $valida);
        }

        if(isset($this->registro['dp_pais_id'])){
            unset($this->registro['dp_pais_id']);
        }
        if(isset($this->registro['dp_estado_id'])){
            unset($this->registro['dp_estado_id']);
        }
        if(isset($this->registro['dp_municipio_id'])){
            unset($this->registro['dp_municipio_id']);
        }
        if(isset($this->registro['dp_cp_id'])){
            unset($this->registro['dp_cp_id']);
        }
        if(isset($this->registro['dp_colonia_postal_id'])){
            unset($this->registro['dp_colonia_postal_id']);
        }

        $org_empresa = (new org_empresa($this->link))->registro(registro_id: $this->registro['org_empresa_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener empresa', data: $org_empresa);
        }

        $dp_calle_pertenece = (new dp_calle_pertenece($this->link))->registro(
            registro_id: $this->registro['dp_calle_pertenece_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener calle', data: $dp_calle_pertenece);
        }

        $descripcion = $org_empresa['org_empresa_descripcion'];
        $descripcion .= ' '.$dp_calle_pertenece['dp_municipio_descripcion'];
        $descripcion .= ' '.$dp_calle_pertenece['dp_estado_descripcion'];
        $descripcion .= ' '.$dp_calle_pertenece['dp_cp_descripcion'];
        $descripcion .= ' '.$this->registro['codigo'];

        $this->registro['descripcion'] = $descripcion;
        $this->registro['descripcion_select'] = strtoupper($descripcion);
        $this->registro['alias'] = $this->registro['codigo'];

        if(!isset($this->registro['tipo_sucursal_id'])){
            $generales = (new generales());
            $tipo_sucursal_base_id = -1;
            $tipo_sucursal_matriz_id = -1;
            if(isset($generales->tipo_sucursal_base_id)){
                $tipo_sucursal_base_id = $generales->tipo_sucursal_base_id;
            }
            if(isset($generales->tipo_sucursal_matriz_id)){
                $tipo_sucursal_matriz_id = $generales->tipo_sucursal_matriz_id;
            }

            $filtro = array();
            $filtro['org_empresa.id'] = $this->registro['org_empresa_id'];
            $n_sucursales = $this->cuenta(filtro: $filtro);
            if(errores::$error){
                return $this->error->error(mensaje: 'Error al contar sucursales',data:  $n_sucursales);
            }
            if((int)$n_sucursales === 0){
                $this->registro['org_tipo_sucursal_id'] = $tipo_sucursal_matriz_id;
            }
            if((int)$n_sucursales >0){
                $filtro = array();
                $filtro['org_empresa.id'] = $this->registro['org_empresa_id'];
                $filtro['org_tipo_sucursal.id'] = $tipo_sucursal_matriz_id;
                $n_sucursales = $this->cuenta(filtro: $filtro);
                if(errores::$error){
                    return $this->error->error(mensaje: 'Error al contar sucursales',data:  $n_sucursales);
                }
                if((int)$n_sucursales === 0){
                    $this->registro['org_tipo_sucursal_id'] = $tipo_sucursal_matriz_id;
                }
                else{
                    $this->registro['org_tipo_sucursal_id'] = $tipo_sucursal_base_id;
                }

            }


        }

        $r_alta_bd =  parent::alta_bd(); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta empresa', data: $r_alta_bd);
        }
        return $r_alta_bd;
    }

}