<?php
namespace gamboamartin\organigrama\models;
use base\orm\modelo;
use gamboamartin\errores\errores;
use PDO;
use stdClass;

class org_puesto extends modelo{
    public function __construct(PDO $link){
        $tabla = 'org_puesto';
        $columnas = array($tabla=>false,'org_tipo_puesto'=>$tabla,'org_departamento'=>$tabla,
            'org_empresa'=>'org_departamento');
        $campos_obligatorios = array('org_tipo_puesto_id','org_departamento_id');
        $campos_view = array(
            'org_tipo_puesto_id' => array('type' => 'selects', 'model' => new org_tipo_puesto($link)),
            'org_departamento_id' => array('type' => 'selects', 'model' => new org_departamento($link)));

        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas,campos_view: $campos_view);

        $this->NAMESPACE = __NAMESPACE__;


    }

    public function alta_bd(): array|stdClass
    {
        if(!isset($this->registro['codigo_bis'])){
            $this->registro['codigo_bis'] = strtoupper($this->registro['codigo']);
        }

        if(!isset($this->registro['descripcion_select'])){
            $this->registro['descripcion_select'] = $this->registro['descripcion'];
            $this->registro['descripcion_select'] .= $this->registro['codigo'];
        }
        if(!isset($this->registro['alias'])){
            $this->registro['alias'] = strtoupper($this->registro['descripcion_select']);
        }

        $r_alta_bd = parent::alta_bd(); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta configuracion',data: $r_alta_bd);
        }
        return $r_alta_bd;
    }

    private function get_puesto_default_id(): array|stdClass|int
    {
        $filtro['org_puesto.predeterminado'] = 'activo';
        $puesto_predeterminado = $this->filtro_and(columnas: array('org_puesto_id'), filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener el puesto predeterminado',data:  $puesto_predeterminado);
        }

        if($puesto_predeterminado->n_registros == 0){
            return $this->error->error(mensaje: 'Error no existe un puesto predeterminado',
                data:  $puesto_predeterminado);
        }

        if($puesto_predeterminado->n_registros > 1){
            return $this->error->error(mensaje: 'Error solo puede existir un puesto predeterminado',
                data:  $puesto_predeterminado);
        }

        return $puesto_predeterminado->registros[0]['org_puesto_id'];
    }




}