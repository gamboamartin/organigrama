<?php
namespace models;
use base\orm\modelo;
use gamboamartin\errores\errores;
use gamboamartin\organigrama\controllers\controlador_org_empresa;
use models\base\limpieza;
use PDO;
use stdClass;

class org_empresa extends modelo{
    public function __construct(PDO $link){
        $tabla = __CLASS__;
        $columnas = array($tabla=>false,'cat_sat_regimen_fiscal'=>$tabla,'dp_calle_pertenece'=>$tabla,
            'dp_colonia_postal'=>'dp_calle_pertenece','dp_cp'=>'dp_colonia_postal','dp_municipio'=>'dp_cp',
            'dp_estado'=>'dp_municipio','dp_pais'=>'dp_estado','org_tipo_empresa'=>$tabla);
        $campos_obligatorios = array('codigo','nombre_comercial','rfc','razon_social');

        $no_duplicados = array('descripcion','codigo','descripcion_select','alias','codigo_bis','rfc','razon_social');

        $tipo_campos['telefono_1'] = 'telefono_mx';
        $tipo_campos['telefono_2'] = 'telefono_mx';
        $tipo_campos['telefono_3'] = 'telefono_mx';

        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas,no_duplicados: $no_duplicados,tipo_campos: $tipo_campos);
    }

    public function alta_bd(): array|stdClass
    {
        $keys = array('razon_social','rfc','codigo','nombre_comercial');
        $valida = $this->validacion->valida_existencia_keys(keys: $keys, registro: $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro', data: $valida);
        }


        $registro = (new limpieza())->init_org_empresa_alta_bd(registro:$this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al inicializar registro', data: $registro);
        }


        $this->registro = $registro;


        $r_alta_bd =  parent::alta_bd(); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta empresa', data: $r_alta_bd);
        }

        $org_sucursal_modelo = new org_sucursal($this->link);

        $org_sucursal_ins['org_empresa_id'] = $r_alta_bd->registro_id;
        $org_sucursal_ins['codigo'] = $registro['codigo'];
        $org_sucursal_ins['codigo_bis'] = $registro['codigo_bis'];


        if(isset($registro['fecha_inicio_operaciones'])){
            $org_sucursal_ins['fecha_inicio_operaciones'] = $registro['fecha_inicio_operaciones'];
        }

        if(isset($registro['dp_calle_pertenece_id'])){
            $org_sucursal_ins['dp_calle_pertenece_id'] = $registro['dp_calle_pertenece_id'];
        }
        if(isset($registro['telefono_1'])){
            $org_sucursal_ins['telefono_1'] = $registro['telefono_1'];
        }
        if(isset($registro['exterior'])){
            $org_sucursal_ins['exterior'] = $registro['exterior'];
        }


        $org_sucursal_modelo->registro = $org_sucursal_ins;

        $r_alta_sucursal = $org_sucursal_modelo->alta_bd();
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta sucursal matriz', data: $r_alta_sucursal);
        }


        return $r_alta_bd;
    }

    public function asigna_datos(controlador_org_empresa $controlador_org_empresa, int $registro_id){
        $registro = $this->registro(registro_id: $registro_id);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al inicializar registro empresa', data: $registro);
        }
        $controlador_org_empresa->rfc = $registro['org_empresa_rfc'];
        $controlador_org_empresa->razon_social = $registro['org_empresa_razon_social'];

        return $controlador_org_empresa;
    }
}