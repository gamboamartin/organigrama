<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\organigrama\controllers;

use gamboamartin\errores\errores;
use gamboamartin\organigrama\html\org_actividad_html;
use gamboamartin\organigrama\html\org_ejecuta_html;
use gamboamartin\organigrama\html\org_puesto_html;
use gamboamartin\organigrama\models\org_ejecuta;
use gamboamartin\organigrama\models\org_puesto;
use gamboamartin\system\links_menu;
use gamboamartin\system\system;
use gamboamartin\template\html;
use PDO;
use stdClass;

class controlador_org_ejecuta extends system {

    public function __construct(PDO $link,  html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass()){
        $modelo = new org_ejecuta(link: $link);
        $html = new org_ejecuta_html($html);
        $obj_link = new links_menu(link: $link, registro_id:$this->registro_id);

        $datatables = new stdClass();
        $datatables->columns = array();
        $datatables->columns['org_ejecuta_id']['titulo'] = 'Id';
        $datatables->columns['org_ejecuta_descripcion']['titulo'] = 'Ejecuta';
        $datatables->columns['org_actividad_descripcion']['titulo'] = 'Actividad';
        $datatables->columns['org_puesto_descripcion']['titulo'] = 'Actividad';

        $datatables->filtro = array();
        $datatables->filtro[] = 'org_ejecuta.id';
        $datatables->filtro[] = 'org_ejecuta.descripcion';
        $datatables->filtro[] = 'org_actividad.descripcion';
        $datatables->filtro[] = 'org_puesto.descripcion';
        parent::__construct(html:$html, link: $link,modelo:  $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $this->titulo_lista = 'Ejecuta';

        $this->parents_verifica['org_puesto'] = (new org_puesto(link: $this->link));

        $this->verifica_parents_alta = true;

    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta =  parent::alta(header: false, ws: false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws:$ws);
        }

        $this->inputs->select = new stdClass();
        $select = (new org_actividad_html(html: $this->html_base))->select_org_actividad_id(cols:12,con_registros:true,id_selected:-1,link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar select',data:  $select);
            print_r($error);
            die('Error');
        }

        $this->inputs->select->org_actividad_id = $select;

        $select = (new org_puesto_html(html: $this->html_base))->select_org_puesto_id(cols:12,con_registros:true,id_selected:-1,link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar select',data:  $select);
            print_r($error);
            die('Error');
        }
        $this->inputs->select->org_puesto_id = $select;

        return $r_alta;
    }


}
